// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classy-ui should allow arguments to group: should allow arguments to group 1`] = `

import { group } from 'classy-ui'

group('color-blue', 'color-red')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('group color-blue color-red ');

_addClasses([]);


`;

exports[`classy-ui should allow group with conditional after it: should allow group with conditional after it 1`] = `

import { c, group } from 'classy-ui'

c(group(), { 'color-red': true })

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
(true ? 'color_red ' : '') + 'group ';

_addClasses(['color_red', '.color_red{color:red;}']);


`;

exports[`classy-ui should allow pseudo decorators as base: should allow pseudo decorators as base 1`] = `

import { c, hover } from 'classy-ui'

hover('color-red')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:color_red ');

_addClasses(['hover:color_red', '.hover\\\\:color_red:hover{color:red;}']);


`;

exports[`classy-ui should convert both breakpoints and pseudos: should convert both breakpoints and pseudos 1`] = `

import { c, hover, md } from 'classy-ui'

c(md(hover('color-red')))

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:md:color_red ');

_addClasses(['hover:md:color_red', '@media (max-width:768px) {.hover\\\\:md\\\\:color_red:hover{color:red;}}']);


`;

exports[`classy-ui should convert breakpoints: should convert breakpoints 1`] = `

import { c, md } from 'classy-ui'

c(md('color-red'))

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('md:color_red ');

_addClasses(['md:color_red', '@media (max-width:768px) {.md\\\\:color_red{color:red;}}']);


`;

exports[`classy-ui should convert complex compositions: should convert complex compositions 1`] = `

import { c, hover, md, lg } from 'classy-ui'

c('color-blue', md(lg(hover('color-red'))))

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('color_blue hover:lg:md:color_red ');

_addClasses([
  'color_blue',
  '.color_blue{color:blue;}',
  'hover:lg:md:color_red',
  '@media (max-width:1024px) {.hover\\\\:lg\\\\:md\\\\:color_red:hover{color:red;}}@media (max-width:768px) {.hover\\\\:lg\\\\:md\\\\:color_red:hover{color:red;}}',
]);


`;

exports[`classy-ui should convert pseudos: should convert pseudos 1`] = `

import { c, hover } from 'classy-ui'

c(hover('color-red'))

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:color_red ');

_addClasses(['hover:color_red', '.hover\\\\:color_red:hover{color:red;}']);


`;

exports[`classy-ui should convert simple: should convert simple 1`] = `

import { c } from 'classy-ui'

c('color-red')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('color_red ');

_addClasses(['color_red', '.color_red{color:red;}']);


`;

exports[`classy-ui should fix specificity inside object: should fix specificity inside object 1`] = `

import { c, hover } from 'classy-ui'

const buttonBlue = c('color-blue');
const buttonGreen = c('color-green');

const buttonRed = c(buttonBlue, buttonGreen, 'color-red');

{className: c(buttonRed, hover('color-green'))}

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity2 } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';
const buttonBlue = 'color_blue ';
const buttonGreen = 'color_green ';

const buttonRed = _fixSpecificity(buttonBlue + buttonGreen + 'color_red ');

{
  className: _fixSpecificity2(buttonRed + 'hover:color_green ');
}

_addClasses([
  'color_blue',
  '.color_blue{color:blue;}',
  'color_green',
  '.color_green{color:var(--colors-green);}:root{--colors-green:green;}\\n.themes-dark{--colors-green:yellow;}',
  'color_red',
  '.color_red{color:red;}',
  'hover:color_green',
  '.hover\\\\:color_green:hover{color:var(--colors-green);}:root{--colors-green:green;}\\n.themes-dark{--colors-green:yellow;}',
]);


`;

exports[`classy-ui should fix specifiy issue in dynamic composition: should fix specifiy issue in dynamic composition 1`] = `

import { c} from 'classy-ui'
const compose = c('color-blue', 'background-color-blue')
const moreCompose = c('color-green', 'background-color-green')

c(compose, moreCompose, 'color-red', 'background-color-red')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';
const compose = 'color_blue backgroundColor_blue ';
const moreCompose = 'color_green backgroundColor_green ';

_fixSpecificity(compose + moreCompose + 'color_red backgroundColor_red ');

_addClasses([
  'color_blue',
  '.color_blue{color:blue;}',
  'backgroundColor_blue',
  '.backgroundColor_blue{background-color:blue;}',
  'color_green',
  '.color_green{color:var(--colors-green);}:root{--colors-green:green;}\\n.themes-dark{--colors-green:yellow;}',
  'backgroundColor_green',
  '.backgroundColor_green{background-color:var(--colors-green);}:root{--colors-green:green;}\\n.themes-dark{--colors-green:yellow;}',
  'color_red',
  '.color_red{color:red;}',
  'backgroundColor_red',
  '.backgroundColor_red{background-color:red;}',
]);


`;

exports[`classy-ui should give group a classname: should give group a classname 1`] = `

import { c, group } from 'classy-ui'

group()

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('group ');

_addClasses([]);


`;

exports[`classy-ui should handle complex dynamic composition: should handle complex dynamic composition 1`] = `

import { c, group } from 'classy-ui'

c(group(), { 'color-red': true }, 'background-color-red', { 'display-block': true }, 'display-inline-block')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
(true ? 'color_red ' : '') + (true ? 'display_block ' : '') + 'group backgroundColor_red display_inline-block ';

_addClasses([
  'color_red',
  '.color_red{color:red;}',
  'backgroundColor_red',
  '.backgroundColor_red{background-color:red;}',
  'display_block',
  '.display_block{display:block;}',
  'display_inline-block',
  '.display_inline-block{display:inline-block;}',
]);


`;

exports[`classy-ui should handle dynamic calls to some function: should handle dynamic calls to some function 1`] = `

import { c, group } from 'classy-ui'

c(group(), someFunction())

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
someFunction() + 'group ';

_addClasses([]);


`;

exports[`classy-ui should not throw when using group inside c call: should not throw when using group inside c call 1`] = `

import { c, group } from 'classy-ui'

c(group())

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('group ');

_addClasses([]);


`;

exports[`classy-ui should throw when nesting c call: should throw when nesting c call 1`] = `

import { c } from 'classy-ui'

c(c('color-blue'))

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: Duplicating c is not allowed.
[0m [90m 1 | [39m[36mimport[39m { c } from [32m'classy-ui'[39m[0m
[0m [90m 2 | [39m[0m
[0m[31m[1m>[22m[39m[90m 3 | [39mc(c([32m'color-blue'[39m))[0m
[0m [90m   | [39m  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;
