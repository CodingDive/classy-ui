// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classy-ui should allow group with conditional after it: should allow group with conditional after it 1`] = `

import { compose, group, tokens } from 'classy-ui'

compose(group, true ? tokens.color.RED : '')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';

_fixSpecificity((true ? 'color-RED' : '') + 'group ');

_addClasses(['color-RED', '.color-RED {\\n  color: red;\\n}']);


`;

exports[`classy-ui should convert both breakpoints and pseudos: should convert both breakpoints and pseudos 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.RED.md.hover)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:md:color-RED ');

_addClasses(['hover:md:color-RED', '@media (max-width: 768px) {.hover\\\\:md\\\\:color-RED:hover {\\n  color: red;\\n}}']);


`;

exports[`classy-ui should convert breakpoints: should convert breakpoints 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.RED.md)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('md:color-RED ');

_addClasses(['md:color-RED', '@media (max-width: 768px) {.md\\\\:color-RED {\\n  color: red;\\n}}']);


`;

exports[`classy-ui should convert complex compositions: should convert complex compositions 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.BLUE, tokens.color.RED.md.lg.hover)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('color-BLUE hover:lg:md:color-RED ');

_addClasses([
  'color-BLUE',
  '.color-BLUE {\\n  color: blue;\\n}',
  'hover:lg:md:color-RED',
  '@media (max-width: 1024px) {.hover\\\\:lg\\\\:md\\\\:color-RED:hover {\\n  color: red;\\n}}@media (max-width: 768px) {.hover\\\\:lg\\\\:md\\\\:color-RED:hover {\\n  color: red;\\n}}',
]);


`;

exports[`classy-ui should convert pseudos: should convert pseudos 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.RED.hover)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:color-RED ');

_addClasses(['hover:color-RED', '.hover\\\\:color-RED:hover {\\n  color: red;\\n}']);


`;

exports[`classy-ui should convert simple: should convert simple 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('color-RED ');

_addClasses(['color-RED', '.color-RED {\\n  color: red;\\n}']);


`;

exports[`classy-ui should fix specificity inside object: should fix specificity inside object 1`] = `

import { compose, tokens } from 'classy-ui'

const buttonBlue = compose(tokens.color.BLUE);
const buttonGreen = compose(tokens.color.GREEN);

const buttonRed = compose(buttonBlue, buttonGreen, tokens.color.RED);

{className: compose(buttonRed, tokens.color.GREEN.hover)}

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity2 } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';
const buttonBlue = 'color-BLUE ';
const buttonGreen = 'color-GREEN ';

const buttonRed = _fixSpecificity(buttonBlue + buttonGreen + 'color-RED ');

{
  className: _fixSpecificity2(buttonRed + 'hover:color-GREEN ');
}

_addClasses([
  'color-BLUE',
  '.color-BLUE {\\n  color: blue;\\n}',
  'color-GREEN',
  '.color-GREEN {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'color-RED',
  '.color-RED {\\n  color: red;\\n}',
  'hover:color-GREEN',
  '.hover\\\\:color-GREEN:hover {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
]);


`;

exports[`classy-ui should fix specifiy issue in dynamic composition: should fix specifiy issue in dynamic composition 1`] = `

import { compose, tokens } from 'classy-ui'
const aCompose = compose(tokens.color.BLUE, tokens.backgroundColor.BLUE)
const moreCompose = compose(tokens.color.GREEN, tokens.backgroundColor.GREEN)

compose(aCompose, moreCompose, tokens.color.RED, tokens.backgroundColor.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';
const aCompose = 'color-BLUE background-color-BLUE ';
const moreCompose = 'color-GREEN background-color-GREEN ';

_fixSpecificity(aCompose + moreCompose + 'color-RED background-color-RED ');

_addClasses([
  'color-BLUE',
  '.color-BLUE {\\n  color: blue;\\n}',
  'background-color-BLUE',
  '.background-color-BLUE {\\n  background-color: blue;\\n}',
  'color-GREEN',
  '.color-GREEN {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'background-color-GREEN',
  '.background-color-GREEN {\\n  background-color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'color-RED',
  '.color-RED {\\n  color: red;\\n}',
  'background-color-RED',
  '.background-color-RED {\\n  background-color: red;\\n}',
]);


`;

exports[`classy-ui should handle binary expressions: should handle binary expressions 1`] = `

import { compose, tokens } from 'classy-ui'

compose(true && tokens.color.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
true ? 'color-RED' : ' ';

_addClasses(['color-RED', '.color-RED {\\n  color: red;\\n}']);


`;

exports[`classy-ui should handle complex dynamic composition: should handle complex dynamic composition 1`] = `

import { compose, group, tokens } from 'classy-ui'

c(group, true ? tokens.color.RED : '', tokens.backgroundColor.RED, true ? tokens.display.BLOCK : '', tokens.display.INLINE_BLOCK)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
c('group', true ? 'color-RED' : '', 'background-color-RED', true ? 'display-BLOCK' : '', 'display-INLINE_BLOCK');

_addClasses([
  'color-RED',
  '.color-RED {\\n  color: red;\\n}',
  'background-color-RED',
  '.background-color-RED {\\n  background-color: red;\\n}',
  'display-BLOCK',
  '.display-BLOCK {\\n  display: block;\\n}',
  'display-INLINE_BLOCK',
  '.display-INLINE_BLOCK {\\n  display: inline-block;\\n}',
]);


`;

exports[`classy-ui should handle conditional expression: should handle conditional expression 1`] = `

import { compose, tokens } from 'classy-ui'

compose(true ? tokens.color.GREEN : token.color.RED )

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
true ? 'color-GREEN' : token.color.RED;

_addClasses([
  'color-GREEN',
  '.color-GREEN {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
]);


`;

exports[`classy-ui should handle derived classnames: should handle derived classnames 1`] = `

import { compose, tokens } from 'classy-ui'

{className: compose(tokens.padding.SPACING_02)}

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
{
  className: 'padding-top-SPACING_02 padding-right-SPACING_02 padding-bottom-SPACING_02 padding-left-SPACING_02 ';
}

_addClasses([
  'padding-top-SPACING_02',
  '.padding-top-SPACING_02 {\\n  padding-top: 0.5rem;\\n}',
  'padding-right-SPACING_02',
  '.padding-right-SPACING_02 {\\n  padding-right: 0.5rem;\\n}',
  'padding-bottom-SPACING_02',
  '.padding-bottom-SPACING_02 {\\n  padding-bottom: 0.5rem;\\n}',
  'padding-left-SPACING_02',
  '.padding-left-SPACING_02 {\\n  padding-left: 0.5rem;\\n}',
]);


`;

exports[`classy-ui should handle dynamic calls to some function: should handle dynamic calls to some function 1`] = `

import { compose, group } from 'classy-ui'

compose(group, someFunction())

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';

_fixSpecificity(someFunction() + 'group ');

_addClasses([]);


`;

exports[`classy-ui should handle themes: should handle themes 1`] = `

import { themes } from 'classy-ui'

c(themes.dark)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
c('themes-dark');

_addClasses([]);


`;

exports[`classy-ui should not throw when using group inside c call: should not throw when using group inside c call 1`] = `

import { compose, group } from 'classy-ui'

compose(group)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('group ');

_addClasses([]);


`;

exports[`classy-ui should throw when nesting c call: should throw when nesting c call 1`] = `

import { compose, tokens } from 'classy-ui'

compose(compose(tokens.color.BLUE))

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: CLASSY-UI: don't nest c/compose calls
[0m [90m 1 | [39m[36mimport[39m { compose[33m,[39m tokens } from [32m'classy-ui'[39m[0m
[0m [90m 2 | [39m[0m
[0m[31m[1m>[22m[39m[90m 3 | [39mcompose(compose(tokens[33m.[39mcolor[33m.[39m[33mBLUE[39m))[0m
[0m [90m   | [39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;

exports[`classy-ui should throw when using default import: should throw when using default import 1`] = `

import classy from 'classy-ui'

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: This style of importing isn't allowed.
[0m[31m[1m>[22m[39m[90m 1 | [39m[36mimport[39m classy from [32m'classy-ui'[39m[0m
[0m [90m   | [39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;

exports[`classy-ui should throw when using namespace import: should throw when using namespace import 1`] = `

import * as classy from 'classy-ui'

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: This style of importing isn't allowed.
[0m[31m[1m>[22m[39m[90m 1 | [39m[36mimport[39m [33m*[39m as classy from [32m'classy-ui'[39m[0m
[0m [90m   | [39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;
